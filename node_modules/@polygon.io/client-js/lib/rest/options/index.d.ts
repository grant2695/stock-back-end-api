import { IAggsQuery, IAggs } from "../stocks/aggregates";
import { IAggsPreviousCloseQuery, IAggsPreviousClose } from "../stocks/previousClose";
import { IOptionsDailyOpenCloseQuery, IOptionsDailyOpenClose } from "./dailyOpenClose";
import { IOptionsLastTrade } from "./lastTrade";
import { IOptionsSnapshotContract } from "./snapshots";
export { IOptionsDailyOpenCloseQuery, IOptionsDailyOpenClose, } from "./dailyOpenClose";
export { IOptionsLastTrade } from "./lastTrade";
export { IOptionsSnapshotContract, snapshotOptionContract } from "./snapshots";
export interface IOptionsClient {
    aggregates: (ticker: string, multiplier: number, timespan: string, from: string, to: string, query?: IAggsQuery) => Promise<IAggs>;
    dailyOpenClose: (symbol: string, date: string, query?: IOptionsDailyOpenCloseQuery) => Promise<IOptionsDailyOpenClose>;
    previousClose: (symbol: string, query?: IAggsPreviousCloseQuery) => Promise<IAggsPreviousClose>;
    lastTrade: (symbol: string) => Promise<IOptionsLastTrade>;
    snapshotOptionContract: (underlyingAsset: string, optionContract: string) => Promise<IOptionsSnapshotContract>;
}
export declare const optionsClient: (apiKey: string, apiBase?: string) => IOptionsClient;
export default optionsClient;
